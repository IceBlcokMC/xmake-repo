diff --git a/include/endstone/detail/scheduler/scheduler.h b/include/endstone/detail/scheduler/scheduler.h
index 70bbf06dc..fdfa5a2c6 100644
--- a/include/endstone/detail/scheduler/scheduler.h
+++ b/include/endstone/detail/scheduler/scheduler.h
@@ -18,7 +18,7 @@
 #include <mutex>
 #include <queue>
 
-#include <moodycamel/concurrentqueue.h>
+#include "concurrentqueue/concurrentqueue.h"
 
 #include "endstone/detail/scheduler/task.h"
 #include "endstone/scheduler/scheduler.h"
diff --git a/include/endstone/detail/scheduler/thread_pool_executor.h b/include/endstone/detail/scheduler/thread_pool_executor.h
index a5b4e60e5..1e17bad5d 100644
--- a/include/endstone/detail/scheduler/thread_pool_executor.h
+++ b/include/endstone/detail/scheduler/thread_pool_executor.h
@@ -22,7 +22,7 @@
 #include <thread>
 #include <vector>
 
-#include <moodycamel/concurrentqueue.h>
+#include "concurrentqueue/concurrentqueue.h"
 
 namespace endstone::detail {
 
diff --git a/include/endstone/logger.h b/include/endstone/logger.h
index 963988773..dde914b80 100644
--- a/include/endstone/logger.h
+++ b/include/endstone/logger.h
@@ -21,6 +21,7 @@
 #include <fmt/std.h>
 
 #include "endstone/util/error.h"
+#include "fmt/core.h"
 
 namespace endstone {
 
@@ -79,7 +80,7 @@ public:
     void log(Level level, const fmt::format_string<Args...> format, Args &&...args) const
     {
         try {
-            log(level, fmt::format(format, std::forward<Args>(args)...));
+            log(level, fmt::vformat(format.get(), fmt::make_format_args(args...)));
         }
         catch (std::exception &e) {
             log(Error, e.what());
@@ -94,7 +95,7 @@ public:
     template <typename... Args>
     void trace(const fmt::format_string<Args...> format, Args &&...args) const
     {
-        log(Trace, format, std::forward<Args>(args)...);
+        log(Trace, fmt::vformat(format.get(), fmt::make_format_args(args...)));
     }
 
     void debug(const std::string &message) const
@@ -105,7 +106,7 @@ public:
     template <typename... Args>
     void debug(const fmt::format_string<Args...> format, Args &&...args) const
     {
-        log(Debug, format, std::forward<Args>(args)...);
+        log(Debug, fmt::vformat(format.get(), fmt::make_format_args(args...)));
     }
 
     void info(const std::string &message) const
@@ -116,7 +117,7 @@ public:
     template <typename... Args>
     void info(const fmt::format_string<Args...> format, Args &&...args) const
     {
-        log(Info, format, std::forward<Args>(args)...);
+        log(Info, fmt::vformat(format.get(), fmt::make_format_args(args...)));
     }
 
     void warning(const std::string &message) const
@@ -127,7 +128,7 @@ public:
     template <typename... Args>
     void warning(const fmt::format_string<Args...> format, Args &&...args) const
     {
-        log(Warning, format, std::forward<Args>(args)...);
+        log(Warning, fmt::vformat(format.get(), fmt::make_format_args(args...)));
     }
 
     void error(const std::string &message) const
@@ -138,13 +139,13 @@ public:
     template <typename... Args>
     void error(const fmt::format_string<Args...> format, Args &&...args) const
     {
-        log(Error, format, std::forward<Args>(args)...);
+        log(Error, fmt::vformat(format.get(), fmt::make_format_args(args...)));
     }
 
     void error(const endstone::Error &error) const
     {
-        log(Error, error.getMessage());
-        log(Error, error.getStackTrace());
+        log(Error, static_cast<std::string>(error.getMessage()));
+        log(Error, static_cast<std::string>(error.getStackTrace()));
     }
 
     void critical(const std::string &message) const
@@ -155,7 +156,7 @@ public:
     template <typename... Args>
     void critical(const fmt::format_string<Args...> format, Args &&...args) const
     {
-        log(Critical, format, std::forward<Args>(args)...);
+        log(Critical, fmt::vformat(format.get(), fmt::make_format_args(args...)));
     }
 };
 
